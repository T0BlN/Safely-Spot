version: "3.9"
name: microstack

services:
  registry:
    build:
      context: ./registry
      dockerfile: Dockerfile
    container_name: registry
    networks: [ skynet ]

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    depends_on:  
      - registry
      - auth-service
    networks: [ skynet ]
    ports: [ "3000:3000" ]
    environment:
      - REGISTRY_URL=http://registry:3000

  pins-service:
    build:
      context: ./pins-service
      dockerfile: Dockerfile
    container_name: pins-service
    depends_on: [ registry ]
    networks: [ skynet ]
    ports: [ "4000:4000" ]

  service-weather:
    build:
      context: ./service-weather
      dockerfile: Dockerfile
    container_name: service-weather
    depends_on: [ registry ]
    networks: [ skynet ]

  forum-service:
    build:
      context: ./forum-service
      dockerfile: Dockerfile
    container_name: forum-service
    depends_on: [ registry ]
    networks: [ skynet ]
    ports: [ "5001:5001" ]

  # Future services go here:
  auth-service:
    build: ./auth-service
    container_name: auth-service
    environment:
      POSTGRES_HOST: auth-db
      POSTGRES_DB: auth
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "4001:4001"
    depends_on:
      - auth-db
    networks:
      - skynet
    
  auth-db:
    image: postgres:15-alpine
    build: ./auth-db
    container_name: auth-db
    ports: 
    - "5432:5432"
    environment:
      POSTGRES_DB: auth
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - user_data:/var/lib/postgresql/data
    networks:
      - skynet


networks:
  skynet:
    driver: bridge

volumes:
  user_data:
