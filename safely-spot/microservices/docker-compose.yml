version: "3.9"
name: microstack

services:
  registry:
    build:
      context: ./registry
      dockerfile: Dockerfile
    container_name: registry
    networks: [ skynet ]

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    depends_on:  
      - registry
      - auth-service
    networks: [ skynet ]
    ports: [ "3000:3000" ]
    environment:
      - REGISTRY_URL=http://registry:3000

  pins-service:
    build:
      context: ./pins-service
      dockerfile: Dockerfile
    container_name: pins-service
    depends_on: [ registry ]
    networks: [ skynet ]
    ports: [ "4000:4000" ]

  service-weather:
    build:
      context: ./service-weather
      dockerfile: Dockerfile
    container_name: service-weather
    depends_on: [ registry ]
    networks: [ skynet ]

  # Future services go here:
  auth-service:
    build: ./auth-service-py
    container_name: auth
    environment:
      POSTGRES_HOST: auth-db
      POSTGRES_DB: auth
      POSTGRES_USER: auth_user
      POSTGRES_PASSWORD: auth_password
    depends_on:
      - auth-pg
    networks:
      - skynet
    
  auth-pg:
    build: ./auth-pg
    container_name: auth-pg
    environment:
      POSTGRES_DB: auth
      POSTGRES_USER: auth_user
      POSTGRES_PASSWORD: auth_password
    volumes:
      - user_data:/var/lib/postgresql/data


networks:
  skynet:
    driver: bridge

volumes:
  user_data:
